[[plugins]]
repo = 'Vimjas/vim-python-pep8-indent'
on_ft = ['py', 'python']

[[plugins]]
repo = 'nvie/vim-flake8'
on_ft = ['py', 'python']
hock_add = '''
autocmd BufWritePost *.py call Flake8()
'''

[[plugins]]
repo = 'tell-k/vim-autopep8'
on_ft = ['py', 'python']
hock_add = '''
autocmd FileType python noremap <buffer> <S-f> :call Autopep8()<CR>
'''

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'
hook_add = '''
" let g:go_highlight_functions = 1
" let g:go_highlight_methods = 1
" let g:go_highlight_fields = 1
" let g:go_highlight_types = 1
let g:go_term_enabled = 1
" let g:go_highlight_operators = 1
" let g:go_highlight_build_constraints = 1
" let g:go_highlight_function_calls = 1
" let g:go_highlight_extra_types = 1
let g:go_template_autocreate = 0

let g:go_fmt_command = "goimports"
let g:go_fmt_fail_silently = 1
let g:go_def_mapping_enabled = 0
let g:go_doc_keywordprg_enabled = 0

let g:neomake_go_errcheck_maker = {
  \ 'args': ['-abspath'],
  \ 'append_file': 0,
  \ 'errorformat': '%f:%l:%c:\ %m, %f:%l:%c\ %#%m',
  \ }
let g:go_gocode_unimported_packages = 1
let g:sonictemplate_enable_pattern = 1

nnoremap <silent> <C-g><C-g> :Denite decls<Return>
set noexpandtab
set tabstop=4
set shiftwidth=4
'''

[[plugins]]
repo = 'sebdah/vim-delve'
on_ft = 'go'
hook_add = '''
let g:delve_backend = "native"
'''

# ruby local variable highlight
[[plugins]]
repo = 'todesking/ruby_hl_lvar.vim'
on_ft = 'ruby'

# rdoc
[[plugins]]
repo = 'hallison/vim-rdoc'
on_ft = 'ruby'

# Ruby on Rails
[[plugins]]
repo = 'tpope/vim-rails'
on_ft = ['rails', 'ruby', 'eruby']
hook_add = '''
nnoremap [rails] <Nop>
nmap   <Leader>r [rails]
nnoremap [rails]r :Denite<Space>rails:
nnoremap <silent> [rails]d :<C-u>Denite<Space>rails:dwim<Return>
nnoremap <silent> [rails]m :<C-u>Denite<Space>rails:model<Return>
nnoremap <silent> [rails]c :<C-u>Denite<Space>rails:controller<Return>
nnoremap <silent> [rails]v :<C-u>Denite<Space>rails:view<Return>
nnoremap <silent> [rails]h :<C-u>Denite<Space>rails:helper<Return>
nnoremap <silent> [rails]t :<C-u>Denite<Space>rails:test<Return>
nnoremap <silent> [rails]s :<C-u>Denite<Space>rails:spec<Return>
au BufNewFile,BufRead *.json.jbuilder set ft=ruby
'''

#[[plugins]]
#repo = '5t111111/denite-rails'
#on_ft = ['rails', 'ruby', 'eruby']
#depends = 'deoplete.nvim'

[[plugins]]
repo = 'tpope/vim-pathogen'
on_ft = ['rails', 'ruby', 'eruby']
hook_source = '''
execute pathogen#infect()
'''

[[plugins]]
repo = 'ruby-formatter/rufo-vim'
on_ft = ['rails', 'ruby']
hook_add = '''
let g:rufo_auto_formatting = 0
'''

[[plugins]]
repo = 'tpope/vim-rake'
depends = 'vim-pathogen'

[[plugins]]
repo = 'tpope/vim-projectionist'
depends = 'vim-pathogen'

[[plugins]]
repo = 'tpope/vim-bundler'
depends = 'vim-pathogen'


[[plugins]]
repo = 'robbles/logstash.vim'
on_ft = ['yaml','yml']

# JavaScript
[[plugins]]
repo = 'othree/yajs.vim'
on_ft = ['javascript']

[[plugins]]
repo = 'pangloss/vim-javascript'
on_ft = ['javascript']

[[plugins]]
repo = 'othree/es.next.syntax.vim'
on_ft = ['javascript']

[[plugins]]
repo = 'othree/javascript-libraries-syntax.vim'
on_ft = ['javascript']
hook_add = '''
let g:used_javascript_libs = 'jquery,underscore,react,flux,jasmine,d3'
let b:javascript_lib_use_jquery = 1
let b:javascript_lib_use_underscore = 1
let b:javascript_lib_use_react = 1
let b:javascript_lib_use_flux = 1
let b:javascript_lib_use_jasmine = 1
let b:javascript_lib_use_d3 = 1
'''

[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = ['typescript']

# html tag close
[[plugins]]
repo = 'alvan/vim-closetag'
on_ft = ['xml', 'html', 'eruby', 'xhtml', 'phtml','vue']
hook_add = '''
let g:closetag_filetypes = 'html,xhtml,phtml,eruby,vue'
'''

# rainbown end
[[plugins]]
repo = 'vim-scripts/rainbow-end'
on_ft = ['rails', 'ruby', 'eruby']


# haml
[[plugins]]
repo = 'tpope/vim-haml'
on_ft = ['haml']

[[plugins]]
repo = 'posva/vim-vue'
on_ft = 'vue'

# markdown
[[plugins]]
repo = 'godlygeek/tabular'
on_ft = ['markdown', 'md']

[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['markdown', 'md']
depends = ['tabular']
hook_add = '''
let g:vim_markdown_folding_disabled = 1
'''

[[plugins]]
repo = 'dhruvasagar/vim-table-mode'
on_ft = ['markdown', 'md']

[[plugins]]
repo = 'iamcco/markdown-preview.vim'
on_ft = ['markdown', 'md']

[[plugins]]
repo = 'slim-template/vim-slim'
on_ft = 'slim'

[[plugins]]
repo = 'cohama/lexima.vim'
on_i = 1
hook_post_source = '''
inoremap <C-f> <C-r>=lexima#insmode#leave(1, '<LT>C-G>U<LT>RIGHT>')<CR>
let g:lexima_enable_newline_rules = 1

" 後ろに文字がある時はタグ補完をしない
call lexima#add_rule({'at': '\%#[-0-9a-zA-Z_,:]', 'char': '{', 'input': '{'})
call lexima#add_rule({'at': '\%#[-0-9a-zA-Z_,:]', 'char': '[', 'input': '['})
call lexima#add_rule({'at': '\%#[-0-9a-zA-Z_,:]', 'char': '(', 'input': '('})

call lexima#add_rule({'at': '\%#[-0-9a-zA-Z_,:\{\[]', 'char': '"', 'input': '"'})
call lexima#add_rule({'at': '[-0-9a-zA-Z_,:\}\]]\%#', 'char': '"', 'input': '"'})

call lexima#add_rule({'at': '\%#[-0-9a-zA-Z_,:\{\[]', 'char': "'", 'input': "'"})
call lexima#add_rule({'at': '[-0-9a-zA-Z_,:\}\]]\%#', 'char': "'", 'input': "'"})

" TAB で閉じカッコの後ろに行く
call lexima#add_rule({'char': '<TAB>', 'at': '\%#)', 'leave': 1})
call lexima#add_rule({'char': '<TAB>', 'at': '\%#"', 'leave': 1})
call lexima#add_rule({'char': '<TAB>', 'at': "\%#'", 'leave': 1})
call lexima#add_rule({'char': '<TAB>', 'at': '\%#]', 'leave': 1})
call lexima#add_rule({'char': '<TAB>', 'at': '\%#}', 'leave': 1})

" for erb
call lexima#add_rule({'char': '<', 'input_after': '>', 'filetype': 'eruby'})
call lexima#add_rule({'char': '>', 'at': '\%#>', 'leave': 1, 'filetype': 'eruby'})
call lexima#add_rule({'char': '<BS>', 'at': '<\%#>', 'delete': 1, 'filetype': 'eruby'})

call lexima#add_rule({'char': '%', 'input_after': '%', 'filetype': 'eruby'})
call lexima#add_rule({'char': '%', 'at': '\%#%', 'leave': 1, 'filetype': 'eruby'})
call lexima#add_rule({'char': '<BS>', 'at': '%\%#%', 'delete': 1, 'filetype': 'eruby'})
'''

[[plugins]]
repo = 'kchmck/vim-coffee-script'
on_ft = 'coffee'
hook_add = '''
au BufRead,BufNewFile,BufReadPre *.coffee   set filetype=coffee
'''

[[plugins]]
repo = 'elzr/vim-json'
on_ft = 'json'
hook_add = '''
let g:vim_json_syntax_conceal = 0
'''

[[plugins]]
repo =  'uarun/vim-protobuf'
on_ft = 'proto'

[[plugins]]
repo = 'vim-ruby/vim-ruby'
on_ft = ['ruby', 'eruby', 'erb']

[[plugins]]
repo = 'hashivim/vim-terraform'
on_ft = ['tf', 'terraform']
hook_add = '''
let g:terraform_fmt_on_save=1
'''

# [[plugins]]
# repo = 'vim-syntastic/syntastic'
# on_ft = ['tf', 'terraform']

# [[plugins]]
# repo = 'juliosueiras/vim-terraform-completion'
# on_ft = ['tf', 'terraform']

[[plugins]]
repo = 'ddollar/golang-template.vim'

[[plugins]]
repo = 'zinit-zsh/zinit-vim-syntax'
on_ft = ['zsh']

[[plugins]]
repo = 'towolf/vim-helm''
on_ft = ['helm']

[[plugin]]
repo = 'skanehira/preview-uml.vim'
hook_add = '''
let g:preview_uml_url='http://localhost:8888'
'''
